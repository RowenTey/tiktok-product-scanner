version: "3.8"
services:
  # api:
  #   build: ./backend
  #   container_name: backend_c
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./backend:/app
  #     - /app/node_modules

  # client:
  #   build: ./frontend
  #   container_name: frontend_c
  #   ports:
  #     - "5173:5173"

  # fastapi_server:
  #   build: ./fastapi_server
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./fastapi_server:/app

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    command: mongod --noauth
    volumes:
      - mongodb_data:/data/db

  minio:
    image: docker.io/bitnami/minio:2024
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: team-cooked
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - minio_data:/data

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    restart: always
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Bob is internal docker network listener
      # Fred is external listener
      KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://10.2.1.15:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT
      KAFKA_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    depends_on:
      - zookeeper

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  mongo_express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017
    depends_on:
      - mongodb

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - "8082:8080"
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

volumes:
  mongodb_data:
  minio_data:
